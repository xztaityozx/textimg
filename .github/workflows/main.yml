name: build

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  build-multi-version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.11', '1.12', '1.13' ]
    name: build go ${{ matrix.go }}
    needs: before
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - run: go build
      - run: go install

  build-on-docker:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v1
      - run: docker-compose run base go test -cover ./...

  build-artifact:
    runs-on: ubuntu-latest
    needs: before
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - run: |
          export PATH=$(go env GOPATH)/bin:$PATH
          make xbuild archive
          tar czf dist.tar.gz dist
      - name: Upload artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v1
        with:
          name: application
          path: dist.tar.gz

  coverage:
    runs-on: ubuntu-latest
    needs: build-multi-version
    steps:
      - uses: actions/checkout@v1
      - name: Build base image
        run: docker-compose run coverage

  create-tag-draft:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs:
      - build-multi-version
      - build-on-docker
    steps:
      - uses: release-drafter/release-drafter@v5.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-multi-version
      - build-on-docker
      - build-artifact
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1
        with:
          name: application
      - run: tar xzf application/dist.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
